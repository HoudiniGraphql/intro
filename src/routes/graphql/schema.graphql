scalar Map

type Query {
	pokemon(first: Int, after: String): SpeciesConnection!
	species(id: Int!): Species
	favorites: [Species!]!
}

type Species {
	id: Int!
	name: String!
	flavor_text: String!
	base_stats: Map!
	favorite: Boolean!
	evolution_chain: [Species!]!
	moves(first: Int, after: String): SpeciesMoveConnection!
	types: [Type!]!
	sprites: SpeciesSprites!
}

type SpeciesSprites {
	front: String!
	back: String!
}

type SpeciesMove {
	learned_at: Int!
	method: String!
	move: Move!
}

type Move {
	name: String!
	power: Int
	accuracy: Int
	pp: Int!
	type: Type
}

enum Type {
	Grass
	Poison
	Fire
	Flying
	Water
	Bug
	Normal
	Electric
	Ground
	Fairy
	Fighting
	Psychic
	Rock
	Steel
	Ice
	Ghost
	Dragon
}

type SpeciesConnection {
	edges: [SpeciesEdge!]!
	pageInfo: PageInfo!
	totalCount: Int!
}

type SpeciesEdge {
	cursor: String
	node: Species
}

type SpeciesMoveConnection {
	edges: [SpeciesMoveEdge!]!
	pageInfo: PageInfo!
	totalCount: Int!
}

type SpeciesMoveEdge {
	cursor: String
	node: SpeciesMove
}

type PageInfo {
	endCursor: String
	hasNextPage: Boolean!
	hasPreviousPage: Boolean!
	startCursor: String
}

type Mutation {
	toggleFavorite(id: Int!): ToggleFavoriteOutput
}

type ToggleFavoriteOutput {
	species: Species
}

type Subscription {
	speciesFavoriteToggled: SpeciesFavoriteToggledOutput!
}

type SpeciesFavoriteToggledOutput {
	species: Species!
}
