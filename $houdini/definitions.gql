
enum CachePolicy {
	CacheAndNetwork
	CacheOnly
	CacheOrNetwork
	NetworkOnly
}

"""
	@list is used to mark a field for the runtime as a place to add or remove
	entities in mutations
"""
directive @list(name: String!, connection: Boolean) on FIELD

"""
	@prepend is used to tell the runtime to add the result to the end of the list
"""
directive @prepend(
	parentID: ID
) on FRAGMENT_SPREAD

"""
	@append is used to tell the runtime to add the result to the start of the list
"""
directive @append(parentID: ID) on FRAGMENT_SPREAD

"""
	@parentID is used to provide a parentID without specifying position or in situations
	where it doesn't make sense (eg when deleting a node.)
"""
directive @parentID(value: ID!) on FRAGMENT_SPREAD

"""
	@when is used to provide a conditional or in situations where it doesn't make sense (eg when removing or deleting a node.)
"""
directive @when on FRAGMENT_SPREAD

"""
	@when_not is used to provide a conditional or in situations where it doesn't make sense (eg when removing or deleting a node.)
"""
directive @when_not on FRAGMENT_SPREAD

"""
	@arguments is used to define the arguments of a fragment
"""
directive @arguments on FRAGMENT_DEFINITION

"""
	@cache is used to specify cache rules for a query
"""
directive @cache(policy: CachePolicy, partial: Boolean) on QUERY

fragment FavoriteSpecies_insert on Species {
  ...FavoritePreview
  id
}
fragment FavoriteSpecies_toggle on Species {
  ...FavoritePreview
  id
  id
}
fragment FavoriteSpecies_remove on Species {
  id
}
directive @Species_delete repeatable on FIELD